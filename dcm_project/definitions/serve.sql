define schema DCM_PROJECT_{{db}}.SERVE;


define view DCM_PROJECT_{{db}}.SERVE.V_DASHBOARD_DAILY_SALES
as
select
    DATE_TRUNC('DAY', ORDER_TS) AS SALE_DATE,
    COUNT(DISTINCT ORDER_ID) AS DAILY_ORDERS,
    SUM(LINE_ITEM_REVENUE) AS DAILY_REVENUE,
    SUM(LINE_ITEM_PROFIT) AS DAILY_PROFIT
FROM
    DCM_PROJECT_{{db}}.ANALYTICS.V_ENRICHED_ORDER_DETAILS
GROUP BY
    SALE_DATE
ORDER BY
    SALE_DATE
;



define view DCM_PROJECT_{{db}}.SERVE.V_DASHBOARD_KPI_SUMMARY
as
select
    SUM(TOTAL_SPEND_USD) AS TOTAL_LIFETIME_REVENUE,
    COUNT(DISTINCT CUSTOMER_ID) AS TOTAL_CUSTOMERS,
    SUM(TOTAL_ORDERS) AS TOTAL_ORDERS,
    SUM(TOTAL_SPEND_USD) / SUM(TOTAL_ORDERS) AS AVERAGE_ORDER_VALUE
FROM
    DCM_PROJECT_{{db}}.ANALYTICS.V_CUSTOMER_SPENDING_SUMMARY
;



define view DCM_PROJECT_{{db}}.SERVE.V_DASHBOARD_SALES_BY_CATEGORY_CITY
as
SELECT
    ITEM_CATEGORY,
    CUSTOMER_CITY,
    SUM(LINE_ITEM_REVENUE) AS TOTAL_REVENUE
FROM
    DCM_PROJECT_{{db}}.ANALYTICS.V_ENRICHED_ORDER_DETAILS
GROUP BY
    ITEM_CATEGORY, CUSTOMER_CITY
ORDER BY
    ITEM_CATEGORY, CUSTOMER_CITY
;


define view DCM_PROJECT_{{db}}.SERVE.V_DASHBOARD_NEW_VS_RETURNING_CUSTOMERS
as
with
customer_order_dates as (
    SELECT
        e.ORDER_ID,
        e.CUSTOMER_ID,
        DATE_TRUNC('DAY', e.ORDER_TS) AS ORDER_DATE,
        DATE_TRUNC('DAY', s.FIRST_ORDER_DATE) AS CUSTOMER_FIRST_ORDER_DATE,
        e.LINE_ITEM_REVENUE
    FROM
        DCM_PROJECT_{{db}}.ANALYTICS.V_ENRICHED_ORDER_DETAILS e
    JOIN
        DCM_PROJECT_{{db}}.ANALYTICS.V_CUSTOMER_SPENDING_SUMMARY s ON e.CUSTOMER_ID = s.CUSTOMER_ID
)
SELECT
    ORDER_DATE,
    CASE
        WHEN ORDER_DATE = CUSTOMER_FIRST_ORDER_DATE THEN 'New Customer'
        ELSE 'Returning Customer'
    END AS CUSTOMER_TYPE,
    SUM(LINE_ITEM_REVENUE) AS REVENUE
FROM
    customer_order_dates
GROUP BY
    ORDER_DATE, CUSTOMER_TYPE
ORDER BY
    ORDER_DATE, CUSTOMER_TYPE
;
